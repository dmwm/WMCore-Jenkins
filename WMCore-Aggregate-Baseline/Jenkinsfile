pipeline {
    agent {
        label 'cms-dmwm-el9'
    }

    environment {
        CODE_REPO = "WMCore"
        WMCORE_REPO = "dmwm"
        TargetIssueID = "0"
    }

    stages {
        stage('Setup') {
            steps {
                cleanWs()

                git branch: params.WMCORE_JENKINS_REF, poll: false, url: params.WMCORE_JENKINS_REPO

                copyArtifacts filter: 'artifacts/nosetest*.xml',
                fingerprintArtifacts: true,
                projectName: 'WMCore-Unittest-Baseline',
                selector: lastSuccessful(),
                target: 'LatestUnitTests'


                sh '''
                echo "$(TZ=GMT date): Job name is $JOB_NAME"

                echo "Creating a venv at $WORKSPACE and installing dependencies"
                python3 -m venv .
                $WORKSPACE/bin/pip install xunitparser

                ls $WORKSPACE
                '''
            }
        }
        stage('Compare tests') {
            steps {
                withCredentials([string(credentialsId: 'd0bc4ba6-d9c5-4668-9839-1b7ff6f795fe', variable: 'DMWMBOT_TOKEN')]) {
                    sh '''
                    git clone https://github.com/dmwm/WMCore code

                    echo "$(TZ=GMT date): comparing tests..."

                    $WORKSPACE/bin/python $WORKSPACE/ContainerScripts/CompareTests.py nosetestspy3

                    pushd code
                    `git tag |grep JENKINS| sort | tail -1 > LatestTag`
                    popd
                    '''
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'code/LatestTag, LatestUnitTests/*/nosetestspy3*.xml', followSymlinks: false

            junit testResults: 'LatestUnitTests/*/nosetestspy3*.xml',
            skipPublishingChecks: true,
            stdioRetention: ''

            cleanWs()
        }
    }
}